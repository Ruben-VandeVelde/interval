#!/usr/bin/env python3
"""Generate proof witnesses for Interval/Interval/Pi.lean"""

import sympy as sp 

def lower(digits):
  N = 10 ** digits
  limit = 10 ** (digits + 10)
  eps = sp.Integer(10) ** (-digits - 30) 

  lo = sp.floor(sp.pi * N) / N
  print(f'lo = {lo}')

  v = 0
  n = 0
  print('witness = [', end='')
  while True:
    ov = sp.sqrt(2 + v)
    v = sp.Rational(sp.N(sp.sqrt(2+v) + eps, 3*digits)).limit_denominator(limit)
    assert v > ov
    n += 1
    print(v, end=', ')
    if sp.sqrt(2 - v) >= lo / 2 ** (n + 1):
      print(']')
      return

def upper(digits):
  N = 10 ** digits
  limit = 10 ** (digits + 10)
  eps = sp.Integer(10) ** (-digits - 30) 

  hi = sp.ceiling(sp.pi * N) / N
  print(f'hi = {hi}')

  v = 0
  n = 0
  print('witness = [', end='')
  while True:
    ov = sp.sqrt(2 + v)
    v = sp.Rational(sp.N(sp.sqrt(2+v) - eps, 3*digits)).limit_denominator(limit)
    assert v < ov
    n += 1
    print(v, end=', ')
    if sp.sqrt(2 - v) <= (hi - 1 / 4**sp.Integer(n)) / 2 ** (n + 1):
      print(']')
      return

if __name__ == '__main__':
  lower(20)
  print()
  upper(20)
